@inject IHttpContextAccessor context
@using NOTEA.Extentions;
Ôªø@using Newtonsoft.Json;
@using NOTEA.Models.ConspectModels;
@using NOTEA.Utilities.ListManipulation;
@using NOTEA.Models.ViewModels;
@using NOTEA.Models.FileTree;
@model NoteaAndFolderListModel;

@{
    if (context.HttpContext.Session.GetString("User") == null)
    {
        context.HttpContext.Response.Redirect("/User/LogIn");
    }
    ViewData["Title"] = "Conspect list";
}
@{
    string[] sortSymbols = { "", " ‚Üë", " ‚Üì" };

    SortPhase[] temp = { SortPhase.None, SortPhase.None, SortPhase.None };
    SortPhase[] sortPhases = ViewData["SortStatus"] == null ? temp : (SortPhase[])ViewData["SortStatus"];

    string NameCollumnName = "Name" + sortSymbols[(int)sortPhases[(int)SortCollumn.Name]];
    string SemesterCollumnName = "Semester" + sortSymbols[(int)sortPhases[(int)SortCollumn.Semester]];
    string DateCollumnName = "Date" + sortSymbols[(int)sortPhases[(int)SortCollumn.Date]];
}

<style>
    .tableHeader {
        background : transparent;
        border: 1px solid transparent;
        font-weight : bold;
    }
    .tableHeader:hover {
        background: #00000055;
    }
    .conspectName {
        background: transparent;
        border: 1px solid transparent;
    }
    .conspectName:hover {
        background: #BBBBBB44;
    }

    .toolButton:hover {
            background: #FFECE4;
    }

    div .text-wrapping {
        word-wrap: normal;
        white-space: pre;
        white-space: pre-wrap;
    }

    .btn-primary:hover,
    .btn-primary:active,
    .btn-primary:visited,
    .btn-primary:focus {
        background-color: #FFECE4;
        border-color: #FFECE4;
        color: black;
    }

    .btn-primary {
        background-color: #708471;
        border: none;
        color: white;
        padding: 2px 5px;
        text-decoration: none;
        margin: 1px 1px;
        cursor: pointer;
    }
</style>

<h1>The list of Noteas</h1>

<br />

<div>
    <table>
        <tr>
            @using (Html.BeginForm("FilterConspect", "Conspect", FormMethod.Get))
            {
                <td>
                    <span><b>Search by:</b></span>
                    @Html.RadioButton("searchBy", "name", ((string)ViewData["SearchBy"])?.ToLower() == "name")
                    <text> Notea name </text>
                    @Html.RadioButton("searchBy", "ConspectSemester", ((string)ViewData["SearchBy"])?.ToLower() == "conspectsemester")
                    <text> Semester </text>
                    <br>
                @* </td>
                <td> *@
                    @Html.TextBox("searchValue", (string)ViewData["SearchValue"], new {Class = "form-control", required = true})
                    @Html.ValidationMessage("Field can't be empty")
                </td>

                <td>
                    <br>
                <input type="submit" value="üîç" class="btn btn-primary" title="Search" />
            </td>
            }
            <td>
                <br />
                @if (ViewData["SearchValue"] != null)
                {
                    <input type="submit" onclick="location.href='@Url.Action("CancelSearch","Conspect")'" value="‚ùå" class="btn btn-primary" title="Clear search" />
                }
            </td>
        </tr>
    </table>
</div>

<br/>


<div>
    <table border-collapse: collapse;>
        <tr>
            <td>
                <input type="submit" onclick="location.href='@Url.Action("GoBack","Conspect")'" value="ü°Ñ" class="btn btn-primary" title="Go back" />
                <button class="btn btn-primary" onclick="showDiv()" title="Add folder" >üû¶üìÅ</button>
            </td>
            @using (Html.BeginForm("AddFolder", "Conspect", FormMethod.Get)){
                <td class="formElement" style="display: none;">
                    @Html.TextBox("foldername", null, new { @class = "form-control", style = "width:200px;", required = true})
                    @Html.ValidationMessage("Field can't be empty")
                </td>
                <td class="formElement" style="display: none;">
                    <input type="submit" value="Add" class="btn btn-primary" />
                </td>
            }
            <td>
                <input type="submit" onclick="location.href='@Url.Action("CreateConspects","Conspect")'" value="üû¶üìÑ" class="btn btn-primary" title="Add notea" />
                <input type="submit" onclick="location.href='@Url.Action("UploadConspect","Conspect")'" value="ü°ÖüìÑ" class="btn btn-primary" title="Upload notea" />
            </td>
        </tr>
    </table>
</div>

<p></p>
<table class="table">
    <tbody>
        <tr>
            <th>
                <input type="submit" class="tableHeader" onclick="location.href='@Url.Action("SortConspect","Conspect", new { Collumn = SortCollumn.Name })'" value="@NameCollumnName"/>
            </th>
            <th>
                <input type="submit" class="tableHeader" onclick="location.href='@Url.Action("SortConspect","Conspect", new { Collumn = SortCollumn.Semester })'" value="@SemesterCollumnName"/>
            </th>
            <th>
                <input type="submit" class="tableHeader" onclick="location.href='@Url.Action("SortConspect","Conspect", new { Collumn = SortCollumn.Date })'" value="@DateCollumnName"/>
            </th>
        </tr>
        @foreach (FolderModel folder in Model.Folders)
        {
            <tr>
                <td>
                    <input type="submit" class="conspectName" onclick="location.href='@Url.Action("OpenFolder","Conspect", new {Id = folder.Id })'" value="üìÅ @folder.Name">
                </td>
                <td>
                </td>
                <td>
                    @folder.Date.ToLongDateString()
                </td>
                <td>
                    <input type="submit" onclick="location.href='@Url.Action("DeleteFolder","Conspect", new {folder_id = folder.Id })'" value="üóë" class="btn btn-primary" title="Delete folder" />
                </td>
            </tr>
        }
        @foreach  (ConspectModel conspectModel in Model.Noteas)
        {
            <tr>
                <td>
                    <input type="submit" class="conspectName" onclick="location.href='@Url.Action("ViewConspect","Conspect", new {Id = conspectModel.Id })'" value="@conspectModel.Name">
                </td>
                <td>
                    @conspectModel.ConspectSemester.GetDisplayName()
                </td>
                <td>
                    @conspectModel.Date.ToLongDateString()
                </td>
                <td>
                    <input type="submit" onclick="location.href='@Url.Action("EditConspect","Conspect", new {Id =conspectModel.Id })'" value="üìù" class="btn btn-primary" title="Edit notea" />
                    <input type="submit" onclick="location.href='@Url.Action("DeleteConspect","Conspect", new {Id = conspectModel.Id })'" value="üóë" class="btn btn-primary" title="Delete notea" />
                </td>
            </tr>
        }
    </tbody>
</table>


<!-- Error Message Modal -->
<div class="modal fade" id="myModalError" tabindex="-1" role="dialog" aria-labelledby="myModalErrorLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #ff6b6b; color: black;">
                <h5 class="modal-title" id="myModalErrorLabel">Oops...</h5>
            </div>
            <div class="modal-body">
                <div id="MyModalErrorAlertBody">
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    function showDiv() {
        var formElements = document.getElementsByClassName('formElement');
        for (var i = 0; i < formElements.length; i++) {
            formElements[i].style.display = (formElements[i].style.display === 'none') ? 'table-cell' : 'none';
        }
    }
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript">
        function openErrorModal(errorMessage) {
            var errorDiv = document.getElementById("MyModalErrorAlertBody");
            errorDiv.innerHTML = errorMessage;
            $('#myModalError').modal('show');
        }

        $(document).ready(function () {
            var errorMsg = "@TempData["ErrorMessage"]";
            if (errorMsg)
                openErrorModal(errorMsg);
        });
    </script>
}

<script type="text/javascript">
    $(document).ready(function () {
        $("#cancelSearch").click(function (e) {
            e.preventDefault();
            GetInfo1();
        });
    });
</script>

<script>
    function showHideInput(checkboxId, panInputId, buttonId) {
        let checkbox = document.getElementById(checkboxId);
        let pan_input = document.getElementById(panInputId);
        let button = document.getElementById(buttonId)

        if (checkbox.checked) {
            pan_input.style.display = "flex";
            button.style.display = "flex";
        } else {
            pan_input.style.display = "none";
        }
    }
</script>