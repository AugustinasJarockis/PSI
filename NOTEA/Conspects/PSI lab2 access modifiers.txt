{"Date":"2023-10-17T23:13:21.788199+03:00","ConspectSemester":2,"Name":"PSI lab2 access modifiers","ConspectText":"All types and type members have an accessibility level. The accessibility level controls whether they can be used from other code in your assembly or other assemblies. An assembly is a .dll or .exe created by compiling one or more .cs files in a single compilation. Use the following access modifiers to specify the accessibility of a type or member when you declare it:\r\n\r\npublic: The type or member can be accessed by any other code in the same assembly or another assembly that references it. The accessibility level of public members of a type is controlled by the accessibility level of the type itself.\r\n\r\nprivate: The type or member can be accessed only by code in the same class or struct.\r\n\r\nprotected: The type or member can be accessed only by code in the same class, or in a class that is derived from that class.\r\n\r\ninternal: The type or member can be accessed by any code in the same assembly, but not from another assembly. In other words, internal types or members can be accessed from code that is part of the same compilation.\r\n\r\nprotected internal: The type or member can be accessed by any code in the assembly in which it's declared, or from within a derived class in another assembly.\r\n\r\nprivate protected: The type or member can be accessed by types derived from the class that are declared within its containing assembly.","ConspectRecords":[]}