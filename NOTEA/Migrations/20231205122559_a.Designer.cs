// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NOTEA.Database;

#nullable disable

namespace NOTEA.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231205122559_a")]
    partial class a
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NOTEA.Models.ConspectModels.ConspectModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConspectSemester")
                        .HasColumnType("int");

                    b.Property<string>("ConspectText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Conspects");
                });

            modelBuilder.Entity("NOTEA.Models.FileTree.FolderModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Folders");
                });

            modelBuilder.Entity("NOTEA.Models.FileTree.TreeNodeModel", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("UnderlyingId")
                        .HasColumnType("int");

                    b.Property<int>("NodeType")
                        .HasColumnType("int");

                    b.Property<int>("FolderID")
                        .HasColumnType("int");

                    b.HasKey("UserID", "UnderlyingId", "NodeType");

                    b.ToTable("FileStructure");
                });

            modelBuilder.Entity("NOTEA.Models.RecordModels.RecordModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ConspectModelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ConspectModelId");

                    b.ToTable("RecordModel");
                });

            modelBuilder.Entity("NOTEA.Models.UserModels.UserConspectsModel", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<string>("Access_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Conspect_Id")
                        .HasColumnType("int");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("No");

                    b.ToTable("UserConspects");
                });

            modelBuilder.Entity("NOTEA.Models.UserModels.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NOTEA.Models.RecordModels.RecordModel", b =>
                {
                    b.HasOne("NOTEA.Models.ConspectModels.ConspectModel", null)
                        .WithMany("ConspectRecords")
                        .HasForeignKey("ConspectModelId");
                });

            modelBuilder.Entity("NOTEA.Models.ConspectModels.ConspectModel", b =>
                {
                    b.Navigation("ConspectRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
